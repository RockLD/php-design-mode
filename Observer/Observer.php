<?php
namespace Observer;
/**
 * 1、观察者模式，当一个对象状态发生改变时，依赖它的对象全部会收到通知，并自动更新
 * 2、场景：一个事件发生后，要执行一连串的更新操作。传统的变成方式，就是在事件的代码之后直接加入处理逻辑。当更新的逻辑增多之后，代码会变得难以维护。这种方式是耦合的，侵入式的，增加新的逻辑需要修改时间主体的代码
 * 3、观察者模式实现了低耦合，非侵入式的通知与更新机制
 */

interface Observer
{
    function update($event_info = null);
}